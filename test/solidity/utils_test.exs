defmodule Solidity.UtilsTest do
  use ExUnit.Case, async: true

  alias Solidity.Utils

  @add_output """

  ======= priv/sols/Add.sol:Add =======
  Binary:
  608060405234801561001057600080fd5b50610245806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806304c402f41461003b5780636d4ce63c14610057575b600080fd5b610055600480360381019061005091906100e2565b610075565b005b61005f61009d565b60405161006c9190610131565b60405180910390f35b8160008190555080600181905550600154600054610093919061017b565b6002819055505050565b6000600254905090565b600080fd5b6000819050919050565b6100bf816100ac565b81146100ca57600080fd5b50565b6000813590506100dc816100b6565b92915050565b600080604083850312156100f9576100f86100a7565b5b6000610107858286016100cd565b9250506020610118858286016100cd565b9150509250929050565b61012b816100ac565b82525050565b60006020820190506101466000830184610122565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610186826100ac565b9150610191836100ac565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156101cc576101cb61014c565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156102045761020361014c565b5b82820190509291505056fea26469706673582212205fa061faab78143cc67281ab2f381a7ab6381556506d9a6ffa0db87afc7d91e964736f6c634300080e0033
  """

  test "correct parse the Add.sol binary" do
    expected = <<
      96,
      128,
      96,
      64,
      82,
      52,
      128,
      21,
      97,
      0,
      16,
      87,
      96,
      0,
      128,
      253,
      91,
      80,
      97,
      2,
      69,
      128,
      97,
      0,
      32,
      96,
      0,
      57,
      96,
      0,
      243,
      254,
      96,
      128,
      96,
      64,
      82,
      52,
      128,
      21,
      97,
      0,
      16,
      87,
      96,
      0,
      128,
      253,
      91,
      80,
      96,
      4,
      54,
      16,
      97,
      0,
      54,
      87,
      96,
      0,
      53,
      96,
      224,
      28,
      128,
      99,
      4,
      196,
      2,
      244,
      20,
      97,
      0,
      59,
      87,
      128,
      99,
      109,
      76,
      230,
      60,
      20,
      97,
      0,
      87,
      87,
      91,
      96,
      0,
      128,
      253,
      91,
      97,
      0,
      85,
      96,
      4,
      128,
      54,
      3,
      129,
      1,
      144,
      97,
      0,
      80,
      145,
      144,
      97,
      0,
      226,
      86,
      91,
      97,
      0,
      117,
      86,
      91,
      0,
      91,
      97,
      0,
      95,
      97,
      0,
      157,
      86,
      91,
      96,
      64,
      81,
      97,
      0,
      108,
      145,
      144,
      97,
      1,
      49,
      86,
      91,
      96,
      64,
      81,
      128,
      145,
      3,
      144,
      243,
      91,
      129,
      96,
      0,
      129,
      144,
      85,
      80,
      128,
      96,
      1,
      129,
      144,
      85,
      80,
      96,
      1,
      84,
      96,
      0,
      84,
      97,
      0,
      147,
      145,
      144,
      97,
      1,
      123,
      86,
      91,
      96,
      2,
      129,
      144,
      85,
      80,
      80,
      80,
      86,
      91,
      96,
      0,
      96,
      2,
      84,
      144,
      80,
      144,
      86,
      91,
      96,
      0,
      128,
      253,
      91,
      96,
      0,
      129,
      144,
      80,
      145,
      144,
      80,
      86,
      91,
      97,
      0,
      191,
      129,
      97,
      0,
      172,
      86,
      91,
      129,
      20,
      97,
      0,
      202,
      87,
      96,
      0,
      128,
      253,
      91,
      80,
      86,
      91,
      96,
      0,
      129,
      53,
      144,
      80,
      97,
      0,
      220,
      129,
      97,
      0,
      182,
      86,
      91,
      146,
      145,
      80,
      80,
      86,
      91,
      96,
      0,
      128,
      96,
      64,
      131,
      133,
      3,
      18,
      21,
      97,
      0,
      249,
      87,
      97,
      0,
      248,
      97,
      0,
      167,
      86,
      91,
      91,
      96,
      0,
      97,
      1,
      7,
      133,
      130,
      134,
      1,
      97,
      0,
      205,
      86,
      91,
      146,
      80,
      80,
      96,
      32,
      97,
      1,
      24,
      133,
      130,
      134,
      1,
      97,
      0,
      205,
      86,
      91,
      145,
      80,
      80,
      146,
      80,
      146,
      144,
      80,
      86,
      91,
      97,
      1,
      43,
      129,
      97,
      0,
      172,
      86,
      91,
      130,
      82,
      80,
      80,
      86,
      91,
      96,
      0,
      96,
      32,
      130,
      1,
      144,
      80,
      97,
      1,
      70,
      96,
      0,
      131,
      1,
      132,
      97,
      1,
      34,
      86,
      91,
      146,
      145,
      80,
      80,
      86,
      91,
      127,
      78,
      72,
      123,
      113,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      96,
      0,
      82,
      96,
      17,
      96,
      4,
      82,
      96,
      36,
      96,
      0,
      253,
      91,
      96,
      0,
      97,
      1,
      134,
      130,
      97,
      0,
      172,
      86,
      91,
      145,
      80,
      97,
      1,
      145,
      131,
      97,
      0,
      172,
      86,
      91,
      146,
      80,
      129,
      127,
      127,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      255,
      3,
      131,
      19,
      96,
      0,
      131,
      18,
      21,
      22,
      21,
      97,
      1,
      204,
      87,
      97,
      1,
      203,
      97,
      1,
      76,
      86,
      91,
      91,
      129,
      127,
      128,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      3,
      131,
      18,
      96,
      0,
      131,
      18,
      22,
      21,
      97,
      2,
      4,
      87,
      97,
      2,
      3,
      97,
      1,
      76,
      86,
      91,
      91,
      130,
      130,
      1,
      144,
      80,
      146,
      145,
      80,
      80,
      86,
      254,
      162,
      100,
      105,
      112,
      102,
      115,
      88,
      34,
      18,
      32,
      95,
      160,
      97,
      250,
      171,
      120,
      20,
      60,
      198,
      114,
      129,
      171,
      47,
      56,
      26,
      122,
      182,
      56,
      21,
      86,
      80,
      109,
      154,
      111,
      250,
      13,
      184,
      122,
      252,
      125,
      145,
      233,
      100,
      115,
      111,
      108,
      99,
      67,
      0,
      8,
      14,
      0,
      51
    >>

    assert {:ok, data} = Utils.output_to_binary(@add_output)
    assert data == expected
  end
end
